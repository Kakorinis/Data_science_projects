Инструкция по установке


Этап 1
1.1 Скачиваем папку by_docker
git clone https://github.com/Kakorinis/Data_science_projects/tree/master/Delivery_club_rews_docker/by_docker.git

1.2. Скачиваем файлы application_log_dict.dill и packet_files.dill
application_log_dict.dill - это версифицированный словарь с моделью
packet_files.dill - это функции для обработки текста, которые вызываются в классе обработки данных у пайплайна модели

Этап 2
Создаем новую среду окружения, чтобы из нее запускать докер и все рекомендованные пакеты устанавлись именно в нее для исключения конфликтов

2.1. Заходим через терминал в директорию с проектом:
python3 -m venv enveironment_name          #здесь python3 это на базе какой версии питона будет среда
__________________________________________________
создастся отдельная папка с названием вирт среды

2.2 чтобы активировать среду пишем в терминале:  # активировать нужно находясь в директории с средой либо указать путь к ней:
source enveironment_name/bin/activate


Этап 3.

3.1 В терминале заходим в директорию где у нас лежит скачанная папка by_doker.
В ней лежат:
- докерфайл с командами запуска контейнера, 
- requirenments.txt - перечень ревомендованных версий библиотек,
- docker-entrypoint.sh - с кодом запуска раннера.
- папка app, в которой лежит:
              - раннер - файл, запускающий сервер, который подтягивает обученную модель МО.


3.2 Находясь в директории где лежит папка by_docker, т.е. не заходя в нее, создаем контейнер:
sudo docker build -t by_docker:v0.1 by_docker  #by_docker:v0.1 - название контейнер, by_docker - папка

3.3 Запускаем контейнер.
В папку by_docker добавлять ничего не нужно, скачанныев п. 1.2 файлы application_log_dict.dill и packet_files.dill находятся в другой директории, 
например они лежат тут: '/home/work/Delivery_club_projects/files'

Запуск:
sudo docker run -d -p 8180:8180 -p 8181:8181 -v '/home/work/Delivery_club_projects/files':/app/app/models by_docker:v0.1
_________________________________
'/home/work/Delivery_club_projects/files':/app/app/models - схлопываем путь из раннера с тем, где физически лежит


4. Контейнер запущен пробуем обратиться к нему через файл user_request_for_docker.ipynb


Примечение:

#проверить наличие контейнеров
sudo docker images

#проверить запущенные докеры
sudo docker ps
sudo docker ps -a

# посмотреть ошибку контейнера
sudo docker logs указываем_id_контейнера  # узнать id: sudo docker ps -a

# удалить старые записи докеров незапустившихся
sudo docker rm id1 id2 id3 # перечисляем id которые хотим удалить

# удалить непосредсвенно образ докера (сначала нужно удалить все остановленные контейнеры и только потом образ) 
sudo docker rmi id_docker_to_del

#ОСТАНОВИТЬ работу ДОКЕРА
sudo docker stop id_docker

#ЗАПУСТИТь работу докера
sudo docker start id_docker

держать контейнер на машине своей не нужно, его лучше сразу удалять и оставлять только докер файл, чтобы потом можно было собрать его 
заново при необходимости - контейнер много весит
